#!/usr/bin/env ruby

SIGNALS = [
  [15, 3],
  [2, 3],
  [1, 4],
  [9, 0]
]

def is_running(pid)
  `ps -p #{pid}`.lines.length == 2
end

def kill(pid, code)
  `kill -#{code} #{pid}`
end

def murder_pid(pid)
  SIGNALS.each do |signal|
    return unless is_running pid

    code, wait = signal

    kill(pid, code)
    sleep 0.5
    sleep(wait) if is_running pid
  end
end

def murder_names(name)
  running = `ps -eo 'pid command' | grep -Fiw '#{name}' | grep -Fv grep`
  for line in running.lines
    pid, fullname = line.split(nil, 2)

    next if Process.pid == pid.to_i

    print "murder #{fullname.chomp} (pid #{pid})? "
    go_ahead = ['y', 'yes', 'yas'].include? $stdin.gets.strip.downcase
    murder(pid) if go_ahead
  end
end

def murder(arg)
  is_pid = arg.to_i != 0
  if is_pid
    murder_pid arg
  else
    murder_names arg
  end
end

if ARGV.size < 1
  $stderr.puts 'what do you want to murder?'
  exit 1
else
  murder(ARGV[0])
end
